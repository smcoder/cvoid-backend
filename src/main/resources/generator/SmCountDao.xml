<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.smcoder.cvoid.dao.SmCountDao">
  <resultMap id="BaseResultMap" type="org.smcoder.cvoid.domain.SmCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address_id" jdbcType="VARCHAR" property="addressId" />
    <result column="new_add" jdbcType="INTEGER" property="newAdd" />
    <result column="sum_count" jdbcType="INTEGER" property="sumCount" />
    <result column="good_count" jdbcType="INTEGER" property="goodCount" />
    <result column="death_count" jdbcType="INTEGER" property="deathCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address_id, new_add, sum_count, good_count, death_count
  </sql>
  <select id="selectByExample" parameterType="org.smcoder.cvoid.example.SmCountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sm_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_count
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sm_count
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.smcoder.cvoid.example.SmCountExample">
    delete from sm_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.smcoder.cvoid.domain.SmCount" useGeneratedKeys="true">
    insert into sm_count (address_id, new_add, sum_count, 
      good_count, death_count)
    values (#{addressId,jdbcType=VARCHAR}, #{newAdd,jdbcType=INTEGER}, #{sumCount,jdbcType=INTEGER},
      #{goodCount,jdbcType=INTEGER}, #{deathCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.smcoder.cvoid.domain.SmCount" useGeneratedKeys="true">
    insert into sm_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressId != null">
        address_id,
      </if>
      <if test="newAdd != null">
        new_add,
      </if>
      <if test="sumCount != null">
        sum_count,
      </if>
      <if test="goodCount != null">
        good_count,
      </if>
      <if test="deathCount != null">
        death_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="newAdd != null">
        #{newAdd,jdbcType=INTEGER},
      </if>
      <if test="sumCount != null">
        #{sumCount,jdbcType=INTEGER},
      </if>
      <if test="goodCount != null">
        #{goodCount,jdbcType=INTEGER},
      </if>
      <if test="deathCount != null">
        #{deathCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.smcoder.cvoid.example.SmCountExample" resultType="java.lang.Long">
    select count(*) from sm_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sm_count
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=VARCHAR},
      </if>
      <if test="record.newAdd != null">
        new_add = #{record.newAdd,jdbcType=INTEGER},
      </if>
      <if test="record.sumCount != null">
        sum_count = #{record.sumCount,jdbcType=INTEGER},
      </if>
      <if test="record.goodCount != null">
        good_count = #{record.goodCount,jdbcType=INTEGER},
      </if>
      <if test="record.deathCount != null">
        death_count = #{record.deathCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sm_count
    set id = #{record.id,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=VARCHAR},
      new_add = #{record.newAdd,jdbcType=INTEGER},
      sum_count = #{record.sumCount,jdbcType=INTEGER},
      good_count = #{record.goodCount,jdbcType=INTEGER},
      death_count = #{record.deathCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.smcoder.cvoid.domain.SmCount">
    update sm_count
    <set>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="newAdd != null">
        new_add = #{newAdd,jdbcType=INTEGER},
      </if>
      <if test="sumCount != null">
        sum_count = #{sumCount,jdbcType=INTEGER},
      </if>
      <if test="goodCount != null">
        good_count = #{goodCount,jdbcType=INTEGER},
      </if>
      <if test="deathCount != null">
        death_count = #{deathCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.smcoder.cvoid.domain.SmCount">
    update sm_count
    set address_id = #{addressId,jdbcType=VARCHAR},
      new_add = #{newAdd,jdbcType=INTEGER},
      sum_count = #{sumCount,jdbcType=INTEGER},
      good_count = #{goodCount,jdbcType=INTEGER},
      death_count = #{deathCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>